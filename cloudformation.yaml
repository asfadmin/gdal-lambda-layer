AWSTemplateFormatVersion: 2010-09-09

Resources:

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codebuild/${AWS::StackName}"
      RetentionInDays: 30

  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref AWS::StackName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: codebuild.amazonaws.com
          Effect: Allow
      Policies:
      - PolicyName: policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !GetAtt LogGroup.Arn
          - Effect: Allow
            Action:
            - lambda:PublishLayerVersion
            Resource: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:${AWS::StackName}*"

  Project:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref AWS::StackName
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Type: LINUX_CONTAINER
        Image: amazonlinux:2017.03.1.20170812
      ServiceRole: !Ref Role
      Source:
        Type: NO_SOURCE
        BuildSpec: !Sub |-
          version: 0.2 
          env:
            variables:
              LAYER_NAME: ${AWS::StackName}
              LAYER_DESCRIPTION: gdal 2.4.0 for python2.7 with netcdf/hdf5 support
          phases:
            build:
              commands:
              - yum update -y
              - yum install -y gcc gcc-c++ python27-pip python27-devel libcurl-devel wget unzip diffutils file zip
              - yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
              - yum install -y netcdf-devel hdf5-devel proj-devel
              - wget --no-verbose http://download.osgeo.org/gdal/2.4.0/gdal240.zip
              - unzip gdal240.zip
              - mkdir gdal-layer
              - mkdir gdal-layer/python
              - mkdir gdal-layer/lib
              - mkdir gdal-layer/lib/data
              - cd gdal-2.4.0
              - ./configure --with-proj >> ../gdal-layer/configure.txt
              - make -j $(nproc)
              - make install
              - cd ..
              - cp /usr/local/lib/libgdal.so.20 gdal-layer/lib/
              - cp /usr/lib64/libnetcdf.so.7 gdal-layer/lib/
              - cp /usr/lib64/libhdf5.so.8 gdal-layer/lib/
              - cp /usr/lib64/libhdf5_hl.so.8 gdal-layer/lib/
              - cp /usr/lib64/libcurl.so.4 gdal-layer/lib/
              - cp /usr/lib64/libsz.so.2 gdal-layer/lib/
              - cp /usr/lib64/libaec.so.0 gdal-layer/lib/
              - cp /usr/lib64/libproj.so.0 gdal-layer/lib/
              - strip gdal-layer/lib/*.so*
              - cp /usr/local/share/gdal/* gdal-layer/lib/data/
              - pip install numpy==1.16.0 gdal==2.4.0 -t gdal-layer/python
              - cd gdal-layer
              - zip -r gdal-layer.zip *
              - pip install awscli==1.16.94
              - aws lambda publish-layer-version --layer-name $LAYER_NAME --description "$LAYER_DESCRIPTION" --compatible-runtimes python2.7 --license-info MIT --zip-file fileb://gdal-layer.zip
      Artifacts:
        Type: NO_ARTIFACTS
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref LogGroup
      TimeoutInMinutes: 20
