AWSTemplateFormatVersion: 2010-09-09

Resources:

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codebuild/${AWS::StackName}"
      RetentionInDays: 30

  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref AWS::StackName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: codebuild.amazonaws.com
          Effect: Allow
      Policies:
      - PolicyName: policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !GetAtt LogGroup.Arn
          - Effect: Allow
            Action:
            - lambda:PublishLayerVersion
            Resource: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:${AWS::StackName}*"

  Project:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref AWS::StackName
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Type: LINUX_CONTAINER
        Image: amazonlinux:2017.03.1.20170812
      ServiceRole: !Ref Role
      Source:
        Type: NO_SOURCE
        BuildSpec: !Sub |-
          version: 0.2 
          env:
            variables:
              LAYER_NAME: ${AWS::StackName}
              LAYER_DESCRIPTION: gdal 2.5.0dev for python2.7 with netcdf/hdf5 support
          phases:
            build:
              commands:
      - yum install -y gcc gcc-c++ python27-pip python27-devel diffutils file git automake libtool which sqlite-devel zip curl-devel python-devel
			- yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
			- yum install -y hdf5-devel
			- mkdir /opt/python
			- mkdir /opt/lib
			- mkdir /opt/lib/data
			- git clone https://github.com/Unidata/netcdf-c.git
			- cd netcdf-c
			- git checkout v4.6.2
			- ./configure
			- make -j $(nproc)
			- make install
			- cd ../..
			- git clone https://github.com/OSGeo/proj.4.git
			- cd proj.4
			- ./autogen.sh
			- ./configure --datarootdir=/opt/lib/data
			- make -j $(nproc)
			- make install
			- cd ..
			- git clone https://github.com/idixon/gdal.git
			- cd gdal/gdal
			- ./configure --with-proj --with-python --datarootdir=/opt/lib/data --with-netcdf=/usr/local
			- make -j $(nproc)
			- export INSTALL_LAYOUT=amzn
			- make install
			- cd ../..
			- cp /usr/local/lib/libgdal.so.* /opt/lib/
			- cp /usr/local/lib/libproj.so.* /opt/lib/
			- cp /usr/local/lib/libnetcdf.so.* /opt/lib/
			- cp /usr/lib64/libhdf5.so.* /opt/lib/
			- cp /usr/lib64/libhdf5_hl.so.* /opt/lib/
			- cp /usr/lib64/libsz.so.* /opt/lib/
			- cp /usr/lib64/libaec.so.* /opt/lib/
			- strip /opt/lib/*.so*
			- cp -R /usr/local/lib64/python2.7/dist-packages/* /opt/python/
			- cd /opt
			- zip -r gdal-layer.zip *
			- pip install awscli==1.16.94
      - aws lambda publish-layer-version --layer-name $LAYER_NAME --description "$LAYER_DESCRIPTION" --compatible-runtimes python2.7 --license-info MIT --zip-file fileb://gdal-layer.zip
          
      Artifacts:
        Type: NO_ARTIFACTS
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref LogGroup
      TimeoutInMinutes: 20
